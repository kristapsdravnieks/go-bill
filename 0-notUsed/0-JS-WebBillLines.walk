import (
	"fmt"
	"log"
	"math/rand"
	"net/http"
	"strconv"
	"time"

	"github.com/postmannen/fakt/data"
)

func (d *webData) webBillLinesJSOld(w http.ResponseWriter, r *http.Request) {
	fmt.Println("INFO: webBillLines: Active user ID when call for bills = ", d.ActiveUserID)
	//get all the bills for the chosen user
	BillsForUser := data.QueryBillsForUser(d.PDB, d.ActiveUserID)
	fmt.Println("INFO: webBillLines: BillsForUser = ", BillsForUser)

	//Sort the bills so the last bill_id is first in the slice, and then shown on top of the listing
	for i := 0; i < len(BillsForUser); i++ {
		for ii := 0; ii < len(BillsForUser); ii++ {
			if BillsForUser[i].BillID > BillsForUser[ii].BillID {
				tmp := BillsForUser[ii]
				BillsForUser[ii] = BillsForUser[i]
				BillsForUser[i] = tmp
			}
		}
	}

	err := tmpl["init.html"].ExecuteTemplate(w, "billLinesComplete", BillsForUser)
	if err != nil {
		log.Println("webBillLines: template execution error = ", err)
	}

	r.ParseForm()
	fmt.Println("r.Form = ", r.Form)

	if r.FormValue("userActionButton") == "choose bill" {
		billID, _ := strconv.Atoi(r.FormValue("billID"))
		log.Println("INFO: webBillLines: billID =", billID)
		fmt.Println("billID = ", billID)
		d.CurrentBillID = billID

	}

	//get all the bill lines for the current billID
	fmt.Println("data.CurrentBillID inneholder = ", d.CurrentBillID)
	billLines := data.QueryBillLines(d.PDB, d.CurrentBillID)
	fmt.Println("webBillLines: queryDBForBillLinesInfo: billLines = ", billLines)

	err = tmpl["init.html"].ExecuteTemplate(w, "createBillLinesNew", billLines)
	if err != nil {
		log.Println("createBillUserSelection: createBillLinesNew: template execution error = ", err)
	}

	r.ParseForm()
	fmt.Println("**POSTFORM***", r.Form)

	r.ParseForm()
	fmt.Println("data.CurrentBillID inneholder =", d.CurrentBillID)

	if r.FormValue("billLineActionButton") == "add" {
		billLine := data.BillLines{}
		billLine.BillID = d.CurrentBillID
		fmt.Println("#######billid some benyttes er =", d.CurrentBillID)
		//create a random number for the bill line....for now....
		rand.Seed(time.Now().UnixNano())
		billLine.LineID = rand.Intn(10000)
		billLine.Description = "noe tekst"
		data.AddBillLine(d.PDB, billLine)

		/*
			//doing a redirect so it redraws the page with the new line. Not sure if this is the best way....
			err = tmpl["init.html"].ExecuteTemplate(w, "redirectToEditBill", "some data")
			if err != nil {
				log.Println("createBillUserSelection: createBillLines: template execution error = ", err)
			}
		*/

		fmt.Println("------Finnished with the add line 'if' sentence")
	}
}
